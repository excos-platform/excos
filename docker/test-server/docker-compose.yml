services:
  excos:
    image: excos:${VERSION}
    networks: [ excos_inner ]
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
      ASPNETCORE_URLS: http://excos:80/
      ConnectionStrings__postgres: "Host=postgres;Port=5432;Database=excos;Username=docker;Password=docker"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  proxy:
    image: steveltn/https-portal
    ports:
    - '80:80'
    - '443:443'
    links:
    - excos
    deploy:
      restart_policy:
        condition: any
        delay: 60s
    volumes:
      - proxy-data:/var/lib/https-portal
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      DOMAINS: 'test.excos.dev -> http://excos'
      STAGE: 'production'
      WEBSOCKET: 'true'
      CLIENT_MAX_BODY_SIZE: '0'
    networks: [ excos_inner ]
    depends_on:
      excos:
        condition: service_started
  
  postgres:
    image: postgres:13
    networks: [ excos_inner ]
    volumes:
    - pgdata:/var/lib/postgresql/data
    environment:
        POSTGRES_USER: docker
        POSTGRES_PASSWORD: docker
        POSTGRES_DB: excos
    healthcheck:
        test: /usr/bin/pg_isready -U docker -d excos
        interval: 5s
        timeout: 10s
        retries: 20

volumes:
  proxy-data:
  pgdata:  
networks:
  excos_inner:
